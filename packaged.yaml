AWSTemplateFormatVersion: '2010-09-09'
Description: 'get_ips

  Sample SAM Template for get_ips

  '
Globals:
  Function:
    Timeout: 10
Outputs:
  GetIpsApi:
    Description: API Gateway endpoint URL for Prod stage for GetIps function
    Value:
      Fn::Sub: https://${GetIpsApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
  GetIpsFunction:
    Description: GetIps Lambda Function ARN
    Value:
      Fn::GetAtt:
      - GetIpsFunction
      - Arn
  GetIpsFunctionIamRole:
    Description: Implicit IAM Role created for GetIps function
    Value:
      Fn::GetAtt:
      - GetIpsFunctionRole
      - Arn
Resources:
  GetIpsApi:
    Properties:
      DefinitionBody:
        basePath: /
        info:
          title: get ips api
        paths:
          /:
            x-amazon-apigateway-any-method:
              produces:
              - application/json
              responses:
                '200':
                  description: successful operation
                  schema:
                    $ref: '#/definitions/Empty'
              x-amazon-apigateway-integration:
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: 200
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetIpsFunction.Arn}/invocations
          /{proxy+}:
            x-amazon-apigateway-any-method:
              parameters:
              - in: path
                name: proxy
                required: true
                type: string
              produces:
              - application/json
              responses: {}
              x-amazon-apigateway-auth:
                type: aws_iam
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetIpsFunction.Arn}/invocations
        schemes:
        - https
        swagger: '2.0'
      StageName: Prod
    Type: AWS::Serverless::Api
  GetIpsFunction:
    Properties:
      CodeUri: s3://awssamtestfranp/76a41915cf1a577e8800f2bf02d29f85
      Environment:
        Variables:
          TABLE_NAME: test-ips
      Events:
        ApiProxy:
          Properties:
            Method: ANY
            Path: /{proxy+}
            RestApiId:
              Ref: GetIpsApi
          Type: Api
      Handler: app.lambda_handler
      Policies: AmazonDynamoDBFullAccess
      Runtime: nodejs8.10
      Tags:
        CREATED_BY: francescop
        ENVIRONMENT: test
    Type: AWS::Serverless::Function
  IpsTable:
    Properties:
      PrimaryKey:
        Name: ip
        Type: String
      TableName: test-ips
      Tags:
        CREATED_BY: francescop
        ENVIRONMENT: test
    Type: AWS::Serverless::SimpleTable
Transform: AWS::Serverless-2016-10-31
